//#include <ax12.h>
//#include <BioloidController.h>

#define DXL_BUS_SERIAL1 1  //Dynamixel on Serial1(USART1)  <-OpenCM9.04
Dynamixel Dxl(DXL_BUS_SERIAL1);

int body_lateral1[241] = {541,540,539,538,537,536,535,534,533,531,530,529,528,526,525,524,523,521,520,519,517,516,515,513,513,513,513,513,513,513,513,513,513,513,512,511,509,508,507,505,504,503,501,500,499,498,496,495,494,493,491,490,489,488,487,486,485,484,483,482,481,480,479,478,477,477,476,475,475,474,473,473,472,472,471,471,471,470,470,470,470,470,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,470,470,470,470,470,471,471,471,472,472,473,473,474,475,475,476,477,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,493,494,495,496,498,499,500,501,503,504,505,507,508,509,511,512,512,512,512,512,512,512,512,512,512,512,513,515,516,517,519,520,521,523,524,525,526,528,529,530,531,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,547,548,549,549,550,551,551,552,552,553,553,553,554,554,554,554,554,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,554,554,554,554,554,553,553,553,552,552,551,551,550,549,549,548,547,547,546,545,544,543,542,541};

int body_lateral2[241] = {541,540,539,538,537,536,535,534,533,531,530,529,528,526,525,524,523,521,520,519,517,516,515,513,513,513,513,513,513,513,513,513,513,513,512,511,509,508,507,505,504,503,501,500,499,498,496,495,494,493,491,490,489,488,487,486,485,484,483,482,481,480,479,478,477,477,476,475,475,474,473,473,472,472,471,471,471,470,470,470,470,470,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,470,470,470,470,470,471,471,471,472,472,473,473,474,475,475,476,477,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,493,494,495,496,498,499,500,501,503,504,505,507,508,509,511,512,512,512,512,512,512,512,512,512,512,512,513,515,516,517,519,520,521,523,524,525,526,528,529,530,531,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,547,548,549,549,550,551,551,552,552,553,553,553,554,554,554,554,554,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,554,554,554,554,554,553,553,553,552,552,551,551,550,549,549,548,547,547,546,545,544,543,542,541};

int body_vert[241] = {};

int FR_ang_vert[241] = {512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,728,728,728,729,729,730,730,731,731,732,732,733,734,734,735,736,736,737,738,738,739,740,740,741,741,742,742,743,743,744,744,745,745,746,746,746,747,747,747,747,747,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,747,747,747,747,747,746,746,746,745,745,744,744,743,743,742,742,741,741,740,740,739,738,738,737,736,736,735,734,734,733,732,732,731,731,730,730,729,729,728,728,728,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512};

int FR_ang_lateral[241] ={517,523,528,533,538,543,548,553,558,562,566,570,574,578,581,584,587,589,591,593,595,596,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,596,596,596,595,595,595,594,594,593,593,592,591,591,590,589,588,588,587,586,585,584,583,582,581,580,579,578,577,575,574,573,572,570,569,568,566,565,564,562,561,559,558,556,556,556,556,556,556,556,556,556,556,556,555,553,552,550,548,547,545,543,542,540,538,537,535,533,531,530,528,526,524,523,521,519,517,516,514,512,510,508,507,505,503,501,500,498,496,494,493,491,489,487,486,484,482,481,479,477,476,474,472,471,469,469,469,469,469,469,469,469,469,469,469,468,466,465,463,462,460,459,458,456,455,454,452,451,450,449,447,446,445,444,443,442,441,440,439,438,437,436,436,435,434,433,433,432,431,431,430,430,429,429,429,428,428,428,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,428,429,431,433,435,437,440,443,446,450,454,458,462,466,471,476,481,486,491,496,501,507,512,517};

int FL_ang_lateral[241] = {510,508,507,505,503,501,500,498,496,494,493,491,489,487,486,484,482,481,479,477,476,474,472,471,471,471,471,471,471,471,471,471,471,471,469,468,466,465,463,462,460,459,458,456,455,454,452,451,450,449,447,446,445,444,443,442,441,440,439,438,437,436,436,435,434,433,433,432,431,431,430,430,429,429,429,428,428,428,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,428,429,431,433,435,437,440,443,446,450,454,458,462,466,471,476,481,486,491,496,501,507,512,517,523,528,533,538,543,548,553,558,562,566,570,574,578,581,584,587,589,591,593,595,596,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,596,596,596,595,595,595,594,594,593,593,592,591,591,590,589,588,588,587,586,585,584,583,582,581,580,579,578,577,575,574,573,572,570,569,568,566,565,564,562,561,559,558,556,555,555,555,555,555,555,555,555,555,555,555,553,552,550,548,547,545,543,542,540,538,537,535,533,531,530,528,526,524,523,521,519,517,516,514,512,510};

int FL_ang_vert[241] ={727,728,728,729,730,730,731,731,732,733,733,734,734,735,735,735,736,736,736,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,736,736,736,735,735,735,734,734,733,733,732,731,731,730,730,729,728,728,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,728,728,728,729,729,730,730,731,731,732,732,733,734,734,735,736,736,737,738,738};

int HL_ang_lateral[241] = {437,436,436,435,434,433,433,432,431,431,430,430,429,429,429,428,428,428,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,428,429,431,433,435,437,440,443,446,450,454,458,462,466,471,476,481,486,491,496,501,507,512,517,523,528,533,538,543,548,553,558,562,566,570,574,578,581,584,587,589,591,593,595,596,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,596,596,596,595,595,595,594,594,593,593,592,591,591,590,589,588,588,587,586,585,584,583,582,581,580,579,578,577,575,574,573,572,570,569,568,566,565,564,562,561,559,558,556,555,555,555,555,555,555,555,555,555,555,555,553,552,550,548,547,545,543,542,540,538,537,535,533,531,530,528,526,524,523,521,519,517,516,514,512,510,508,507,505,503,501,500,498,496,494,493,491,489,487,486,484,482,481,479,477,476,474,472,471,469,469,469,469,469,469,469,469,469,469,469,468,466,465,463,462,460,459,458,456,455,454,452,451,450,449,447,446,445,444,443,442,441,440,439,438,437};

int HL_ang_vert[241] ={727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,728,728,728,729,729,730,730,731,731,732,732,733,734,734,735,736,736,737,738,738,739,740,740,741,741,742,742,743,743,744,744,745,745,746,746,746,747,747,747,747,747,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,747,747,747,747,747,746,746,746,745,745,744,744,743,743,742,742,741,741,740,740,739,738,738,737,736,736,735,734,734,733,732,732,731,731,730,730,729,729,728,728,728,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727};

int HR_ang_lateral[241] = {585,584,583,582,581,580,579,578,577,575,574,573,572,570,569,568,566,565,564,562,561,559,558,556,556,556,556,556,556,556,556,556,556,556,555,553,552,550,548,547,545,543,542,540,538,537,535,533,531,530,528,526,524,523,521,519,517,516,514,512,510,508,507,505,503,501,500,498,496,494,493,491,489,487,486,484,482,481,479,477,476,474,472,471,471,471,471,471,471,471,471,471,471,471,469,468,466,465,463,462,460,459,458,456,455,454,452,451,450,449,447,446,445,444,443,442,441,440,439,438,437,436,436,435,434,433,433,432,431,431,430,430,429,429,429,428,428,428,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,428,429,431,433,435,437,440,443,446,450,454,458,462,466,471,476,481,486,491,496,501,507,512,517,523,528,533,538,543,548,553,558,562,566,570,574,578,581,584,587,589,591,593,595,596,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,596,596,596,595,595,595,594,594,593,593,592,591,591,590,589,588,588,587,586,585};

int HR_ang_vert[241] ={727,728,728,729,730,730,731,731,732,733,733,734,734,735,735,735,736,736,736,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,736,736,736,735,735,735,734,734,733,733,732,731,731,730,730,729,728,728,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,728,728,728,729,729,730,730,731,731,732,732,733,734,734,735,736,736,737,738,738};


int period = 0;

void setup() {

  delay(3000);
  
  Dxl.begin(3);
  for(int i=1; i<16; i++){
    Dxl.jointMode(i); //jointMode() is to use position mode
//    Dxl.jointMode(3); //jointMode() is to use position mode
//    Dxl.jointMode(4); //jointMode() is to use position mode
//    Dxl.jointMode(5); //jointMode() is to use position mode
//    Dxl.jointMode(6); //jointMode() is to use position mode
//    Dxl.jointMode(9); //jointMode() is to use position mode
//    Dxl.jointMode(10); //jointMode() is to use position mode
//    Dxl.jointMode(11); //jointMode() is to use position mode
//    Dxl.jointMode(12); //jointMode() is to use position mode
//    Dxl.jointMode(12); //jointMode() is to use position mode
  }
//  for(int i = 1; i < 16; i++)
//  {
//    
//    Dxl.goalPosition(i,  512);
//  }
  Dxl.goalPosition(1,  512);
  Dxl.goalPosition(3,  512);
  Dxl.goalPosition(4,  512);
  Dxl.goalPosition(5,  512);
  Dxl.goalPosition(7,  512);
  Dxl.goalPosition(8,  512);
  Dxl.goalPosition(9,  512);
  Dxl.goalPosition(11,  512);
  Dxl.goalPosition(12,  512);
  Dxl.goalPosition(13,  512);
  Dxl.goalPosition(15,  512);
  
  Dxl.goalPosition(2,  712);
  Dxl.goalPosition(6,  312);
  Dxl.goalPosition(10,  312);
  Dxl.goalPosition(14,  712);
  delay(2000);

}

void loop() {
  while(period < 10000){
    Dxl.goalPosition(7,  1024-body_lateral1[period%241]);
    delay(0.5);
    Dxl.goalPosition(9,  body_lateral2[period%241]);
    delay(0.5);
    Dxl.goalPosition(8,  1024-body_vert[period%241]);
    delay(0.5);
    Dxl.goalPosition(2, FL_ang_vert[period%241]);
    delay(0.5);
    Dxl.goalPosition(6, 1024-FR_ang_vert[period%241]);
    delay(0.5);
    Dxl.goalPosition(3,  1024-FL_ang_lateral[period%241]);
    delay(0.5);
    Dxl.goalPosition(4,  FR_ang_lateral[period%241]);
    delay(0.5);
    Dxl.goalPosition(10,  1024-HL_ang_vert[period%241]);
    delay(0.5);
    Dxl.goalPosition(14,  HR_ang_vert[period%241]);
    delay(0.5);
    Dxl.goalPosition(12,  1024-HL_ang_lateral[period%241]);
    delay(0.5);
    Dxl.goalPosition(13,  HR_ang_lateral[period%241]);
    period++;
    delay(0.5);
  }
  delay(20000000);
}

